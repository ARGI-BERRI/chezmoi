# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/.local/bin" ] ; then
    PATH="$HOME/.local/bin:$PATH"
fi

export PAGER='less'
export EDITOR='vim'

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
export HISTSIZE=1000
export HISTFILESIZE=2000
export HISTCONTROL=ignoreboth

# GCC
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# XDG
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_STATE_HOME="$HOME/.local/state"
export XDG_CACHE_HOME="$HOME/.cache"

# readline
export INPUTRC="$XDG_CONFIG_HOME"/readline/inputrc

# Rust
export RUSTUP_HOME="$XDG_DATA_HOME"/rustup
export CARGO_HOME="$XDG_DATA_HOME"/cargo
. "$CARGO_HOME/env"

# asdf
export ASDF_DIR="$XDG_DATA_HOME"/asdf
export ASDF_DATA_DIR="$XDG_DATA_HOME"/asdf
. "$ASDF_DATA_DIR/asdf.sh"

# asdf - golang
export PATH="$(go env GOPATH)/bin:$PATH"

# GNU Parallel
export PARALLEL_HOME="$XDG_CONFIG_HOME"/parallel

# zsh
export ZDOTDIR="$XDG_CONFIG_HOME"/zsh

# dotnet
export DOTNET_CLI_HOME="$XDG_DATA_HOME"/dotnet

# starship
export STARSHIP_CONFIG="$XDG_CONFIG_HOME"/starship/starship.toml

# screen
export SCREENRC="$XDG_CONFIG_HOME"/screen/screenrc

# Qt
export QT_SCALE_FACTOR=1
export QT_QPA_PLATFORM=xcb

# GTK
export GTK2_RC_FILES="$XDG_CONFIG_HOME"/gtk-2.0/gtkrc

# Scilab
export SCIHOME="$XDG_STATE_HOME"/scilab

# fzf
export PATH="$XDG_DATA_HOME/fzf/bin:$PATH"
export FZF_DEFAULT_OPTS="--border --reverse"

# if running bash
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then
	. "$HOME/.bashrc"
    fi
fi
